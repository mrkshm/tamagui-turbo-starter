/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as MemberIndexImport } from './routes/member/index'
import { Route as LandingIndexImport } from './routes/landing/index'
import { Route as AuthWaitingImport } from './routes/auth/waiting'
import { Route as AuthVerifyImport } from './routes/auth/verify'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthPasswordResetConfirmImport } from './routes/auth/password-reset-confirm'
import { Route as AuthPasswordResetImport } from './routes/auth/password-reset'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as MemberProfileIndexImport } from './routes/member/profile/index'
import { Route as MemberContactsIndexImport } from './routes/member/contacts/index'
import { Route as MemberContactsContactSlugImport } from './routes/member/contacts/$contactSlug'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MemberIndexRoute = MemberIndexImport.update({
  id: '/member/',
  path: '/member/',
  getParentRoute: () => rootRoute,
} as any)

const LandingIndexRoute = LandingIndexImport.update({
  id: '/landing/',
  path: '/landing/',
  getParentRoute: () => rootRoute,
} as any)

const AuthWaitingRoute = AuthWaitingImport.update({
  id: '/auth/waiting',
  path: '/auth/waiting',
  getParentRoute: () => rootRoute,
} as any)

const AuthVerifyRoute = AuthVerifyImport.update({
  id: '/auth/verify',
  path: '/auth/verify',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthPasswordResetConfirmRoute = AuthPasswordResetConfirmImport.update({
  id: '/auth/password-reset-confirm',
  path: '/auth/password-reset-confirm',
  getParentRoute: () => rootRoute,
} as any)

const AuthPasswordResetRoute = AuthPasswordResetImport.update({
  id: '/auth/password-reset',
  path: '/auth/password-reset',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const MemberProfileIndexRoute = MemberProfileIndexImport.update({
  id: '/member/profile/',
  path: '/member/profile/',
  getParentRoute: () => rootRoute,
} as any)

const MemberContactsIndexRoute = MemberContactsIndexImport.update({
  id: '/member/contacts/',
  path: '/member/contacts/',
  getParentRoute: () => rootRoute,
} as any)

const MemberContactsContactSlugRoute = MemberContactsContactSlugImport.update({
  id: '/member/contacts/$contactSlug',
  path: '/member/contacts/$contactSlug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/password-reset': {
      id: '/auth/password-reset'
      path: '/auth/password-reset'
      fullPath: '/auth/password-reset'
      preLoaderRoute: typeof AuthPasswordResetImport
      parentRoute: typeof rootRoute
    }
    '/auth/password-reset-confirm': {
      id: '/auth/password-reset-confirm'
      path: '/auth/password-reset-confirm'
      fullPath: '/auth/password-reset-confirm'
      preLoaderRoute: typeof AuthPasswordResetConfirmImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify': {
      id: '/auth/verify'
      path: '/auth/verify'
      fullPath: '/auth/verify'
      preLoaderRoute: typeof AuthVerifyImport
      parentRoute: typeof rootRoute
    }
    '/auth/waiting': {
      id: '/auth/waiting'
      path: '/auth/waiting'
      fullPath: '/auth/waiting'
      preLoaderRoute: typeof AuthWaitingImport
      parentRoute: typeof rootRoute
    }
    '/landing/': {
      id: '/landing/'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingIndexImport
      parentRoute: typeof rootRoute
    }
    '/member/': {
      id: '/member/'
      path: '/member'
      fullPath: '/member'
      preLoaderRoute: typeof MemberIndexImport
      parentRoute: typeof rootRoute
    }
    '/member/contacts/$contactSlug': {
      id: '/member/contacts/$contactSlug'
      path: '/member/contacts/$contactSlug'
      fullPath: '/member/contacts/$contactSlug'
      preLoaderRoute: typeof MemberContactsContactSlugImport
      parentRoute: typeof rootRoute
    }
    '/member/contacts/': {
      id: '/member/contacts/'
      path: '/member/contacts'
      fullPath: '/member/contacts'
      preLoaderRoute: typeof MemberContactsIndexImport
      parentRoute: typeof rootRoute
    }
    '/member/profile/': {
      id: '/member/profile/'
      path: '/member/profile'
      fullPath: '/member/profile'
      preLoaderRoute: typeof MemberProfileIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/password-reset': typeof AuthPasswordResetRoute
  '/auth/password-reset-confirm': typeof AuthPasswordResetConfirmRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/auth/waiting': typeof AuthWaitingRoute
  '/landing': typeof LandingIndexRoute
  '/member': typeof MemberIndexRoute
  '/member/contacts/$contactSlug': typeof MemberContactsContactSlugRoute
  '/member/contacts': typeof MemberContactsIndexRoute
  '/member/profile': typeof MemberProfileIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/password-reset': typeof AuthPasswordResetRoute
  '/auth/password-reset-confirm': typeof AuthPasswordResetConfirmRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/auth/waiting': typeof AuthWaitingRoute
  '/landing': typeof LandingIndexRoute
  '/member': typeof MemberIndexRoute
  '/member/contacts/$contactSlug': typeof MemberContactsContactSlugRoute
  '/member/contacts': typeof MemberContactsIndexRoute
  '/member/profile': typeof MemberProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/password-reset': typeof AuthPasswordResetRoute
  '/auth/password-reset-confirm': typeof AuthPasswordResetConfirmRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/auth/waiting': typeof AuthWaitingRoute
  '/landing/': typeof LandingIndexRoute
  '/member/': typeof MemberIndexRoute
  '/member/contacts/$contactSlug': typeof MemberContactsContactSlugRoute
  '/member/contacts/': typeof MemberContactsIndexRoute
  '/member/profile/': typeof MemberProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/password-reset'
    | '/auth/password-reset-confirm'
    | '/auth/signup'
    | '/auth/verify'
    | '/auth/waiting'
    | '/landing'
    | '/member'
    | '/member/contacts/$contactSlug'
    | '/member/contacts'
    | '/member/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/password-reset'
    | '/auth/password-reset-confirm'
    | '/auth/signup'
    | '/auth/verify'
    | '/auth/waiting'
    | '/landing'
    | '/member'
    | '/member/contacts/$contactSlug'
    | '/member/contacts'
    | '/member/profile'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/password-reset'
    | '/auth/password-reset-confirm'
    | '/auth/signup'
    | '/auth/verify'
    | '/auth/waiting'
    | '/landing/'
    | '/member/'
    | '/member/contacts/$contactSlug'
    | '/member/contacts/'
    | '/member/profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthPasswordResetRoute: typeof AuthPasswordResetRoute
  AuthPasswordResetConfirmRoute: typeof AuthPasswordResetConfirmRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
  AuthWaitingRoute: typeof AuthWaitingRoute
  LandingIndexRoute: typeof LandingIndexRoute
  MemberIndexRoute: typeof MemberIndexRoute
  MemberContactsContactSlugRoute: typeof MemberContactsContactSlugRoute
  MemberContactsIndexRoute: typeof MemberContactsIndexRoute
  MemberProfileIndexRoute: typeof MemberProfileIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthPasswordResetRoute: AuthPasswordResetRoute,
  AuthPasswordResetConfirmRoute: AuthPasswordResetConfirmRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerifyRoute: AuthVerifyRoute,
  AuthWaitingRoute: AuthWaitingRoute,
  LandingIndexRoute: LandingIndexRoute,
  MemberIndexRoute: MemberIndexRoute,
  MemberContactsContactSlugRoute: MemberContactsContactSlugRoute,
  MemberContactsIndexRoute: MemberContactsIndexRoute,
  MemberProfileIndexRoute: MemberProfileIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/auth/password-reset",
        "/auth/password-reset-confirm",
        "/auth/signup",
        "/auth/verify",
        "/auth/waiting",
        "/landing/",
        "/member/",
        "/member/contacts/$contactSlug",
        "/member/contacts/",
        "/member/profile/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/password-reset": {
      "filePath": "auth/password-reset.tsx"
    },
    "/auth/password-reset-confirm": {
      "filePath": "auth/password-reset-confirm.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/auth/verify": {
      "filePath": "auth/verify.tsx"
    },
    "/auth/waiting": {
      "filePath": "auth/waiting.tsx"
    },
    "/landing/": {
      "filePath": "landing/index.tsx"
    },
    "/member/": {
      "filePath": "member/index.tsx"
    },
    "/member/contacts/$contactSlug": {
      "filePath": "member/contacts/$contactSlug.tsx"
    },
    "/member/contacts/": {
      "filePath": "member/contacts/index.tsx"
    },
    "/member/profile/": {
      "filePath": "member/profile/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
